name: Continuous Integration (CI)
on: [push]
env:
  JAVA_VERSION: 1.8
jobs:
  validate:
    name: Gradle Wrapper Validation
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Validate Gradle wrapper
        uses: gradle/wrapper-validation-action@v1

  code_style:
    name: Code Style Check
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Check code style
        run: ./gradlew spotlessCheck --scan

  check_dependencies:
    name: Dependency Updates
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Check dependency updates
        run: ./gradlew dependencyUpdates --scan

      - name: Upload dependency updates report
        uses: actions/upload-artifact@v1
        with:
          name: dependency-updates
          path: build/dependencyUpdates

  build:
    name: Build Tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Set up JDK ${{ env.JAVA_VERSION }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ env.JAVA_VERSION }}

      - name: Generate cache key
        run: ./checksum.sh checksum.txt

      - name: Cache gradle modules
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('checksum.txt') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and test debug variant
        run: ./gradlew assembleDebug bundleDebug testDebug --scan

      - name: Build and test release variant
        run: ./gradlew assembleRelease bundleRelease testRelease --scan

      - name: Check lint
        run: ./gradlew lint --scan

      - name: Upload build output files
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: build-outputs
          path: app/build/outputs

      - name: Upload build report files
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: build-reports
          path: app/build/reports
